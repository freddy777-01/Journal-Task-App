name: Build Desktop Apps

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    env:
      CSC_IDENTITY_AUTO_DISCOVERY: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build renderer (Vite)
        run: npm run build:vite

      - name: Build Windows (tag publish)
        if: matrix.os == 'windows-latest' && startsWith(github.ref, 'refs/tags/')
        run: npm run build:win
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Build Windows (no publish)
        if: matrix.os == 'windows-latest' && !startsWith(github.ref, 'refs/tags/')
        run: npx electron-builder --win --publish never

      - name: Build macOS (tag publish)
        if: matrix.os == 'macos-latest' && startsWith(github.ref, 'refs/tags/')
        run: npm run build:mac
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Build macOS (no publish)
        if: matrix.os == 'macos-latest' && !startsWith(github.ref, 'refs/tags/')
        run: npx electron-builder --mac --publish never

      - name: Build Linux (tag publish)
        if: matrix.os == 'ubuntu-latest' && startsWith(github.ref, 'refs/tags/')
        run: npm run build:linux
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Build Linux (no publish)
        if: matrix.os == 'ubuntu-latest' && !startsWith(github.ref, 'refs/tags/')
        run: npx electron-builder --linux --publish never

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-artifacts
          path: release/**
          if-no-files-found: ignore
