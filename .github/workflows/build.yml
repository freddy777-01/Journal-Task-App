name: Build Desktop Apps

on:
  # Publish builds when pushing a version tag like v1.2.3
  push:
    tags:
      - "v*"
  # Allow manual runs without publishing
  workflow_dispatch:

permissions:
  contents: write  # required to create GitHub Releases on tag builds

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    env:
      # Speeds up Electron downloads across runs
      ELECTRON_CACHE: ${{ runner.temp }}/electron
      ELECTRON_BUILDER_CACHE: ${{ runner.temp }}/electron-builder
      # If you are NOT code signing, prevent macOS signing prompts
      CSC_IDENTITY_AUTO_DISCOVERY: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build renderer (Vite)
        run: npm run build:vite

      # Build per-OS using your scripts
      - name: Build Windows
        if: runner.os == 'Windows'
        run: npm run build:win
        env:
          # Only set GH_TOKEN on tag builds so electron-builder publishes
          GH_TOKEN: ${{ startsWith(github.ref, 'refs/tags/') && secrets.GH_TOKEN || '' }}

      - name: Build macOS
        if: runner.os == 'macOS'
        run: npm run build:mac
        env:
          GH_TOKEN: ${{ startsWith(github.ref, 'refs/tags/') && secrets.GH_TOKEN || '' }}
          # If notarizing/signing, you'll also provide the Apple creds as secrets (see notes below)
          # APPLE_ID: ${{ secrets.APPLE_ID }}
          # APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          # APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}

      - name: Build Linux
        if: runner.os == 'Linux'
        run: npm run build:linux
        env:
          GH_TOKEN: ${{ startsWith(github.ref, 'refs/tags/') && secrets.GH_TOKEN || '' }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-artifacts
          path: release/**
          if-no-files-found: ignore
